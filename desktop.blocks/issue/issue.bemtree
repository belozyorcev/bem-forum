block('issue')(

    match(function() { return this.ctx.issue || this.ctx.data; }).def()(function() {

        var issue = this.ctx.issue || this.ctx.data;

        return applyNext({ _issue: issue });
    }),

    match(function() { return this._issue; }).content()(function() {

        var issue = this._issue;

        return [
            {
                elem: 'wrap',
                content: [
                    {
                        elem: 'line',
                        elemMods: { level: 'top' },
                        mix: { block: 'line', mods: { valign: 'middle' }}
                    },
                    {
                        elem: 'line',
                        elemMods: { level: 'middle' },
                        mix: { block: 'line', mods: { valign: 'stretch' }}
                    }
                ]
            },
            {
                block: 'comments',
                mods: { hidden: true },
                js: {
                    issueNumber: issue.number,
                    comments: issue.comments
                }
            }
        ]
    }),

    // user avatar + name
    elem('line').elemMod('level', 'top')(

        content()(function() {
            var issue = this._issue,
                user = issue.user,
                date = issue.updated_at;

            return [
                {
                    block: 'column',
                    mods: { side: 'left' },
                    content: {
                        block: 'user',
                        elem: 'avatar',
                        url: user.avatar_url,
                        alt: user.login,
                        mix: [{ block: 'issue', elem: 'avatar' }]
                    }
                },
                {
                    block: 'column',
                    mods: { side: 'right' },
                    mix: { block: 'flex' },
                    content: {
                        block: 'line',
                        mods: { valign: 'middle' },
                        content: [
                            {
                                block: 'user',
                                elem: 'name',
                                url: user.login,
                                title: user.login,
                                content: user.login,
                                mix: [{ block: 'issue', elem: 'username' }]
                            },
                            {
                                block: 'issue',
                                elem: 'usertext',
                                content: 'написал'
                            },
                            {
                                block: 'date',
                                date: date,
                                mix: [{ block: 'issue', elem: 'date' }]
                            },
                            {
                                block: 'issue',
                                elem: 'owner-action',
                                content: [
                                    {
                                        elem: 'edit'
                                    },
                                    {
                                        elem: 'remove'
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        })
    ),

    // body content + edit,delete buttons + labels + date
    elem('line').elemMod('level', 'middle')(

        content()(function() {
            var issue = this._issue;

            return [
                {
                    block: 'column',
                    mods: { side: 'left' }
                },
                {
                    block: 'column',
                    mods: { side: 'right' },
                    content: [
                        {
                            block: 'issue',
                            elem: 'line',
                            elemMods: { level: 'titles' },
                            content: [
                                {
                                    block: 'issue',
                                    elem: 'number',
                                    content: '#' + issue.number
                                },
                                {
                                    block: 'link',
                                    mix: { block: this.block, elem: 'title' },
                                    url: 'issues/' + issue.number,
                                    title: issue.title,
                                    content: issue.title
                                },
                                {
                                    block: 'issue',
                                    elem: 'labels'
                                }
                            ]
                        },
                        {
                            block: 'issue',
                            elem: 'body',
                            mix: { block: 'text' }
                        },
                        {
                            block: 'issue',
                            elem: 'line',
                            elemMods: { level: 'bottom' },
                            mix: { block: 'line', mods: { valign: 'stretch' }}
                        }
                    ]
                }
            ]

        })
    ),

    // labels
    elem('labels')(
        match(function() { return this._issue.labels.length; }).def()(function() {

            var labels = this._issue.labels;

            return labels.map(function(label) {
                return {
                    elem: 'label',
                    url: label.name,
                    color: label.color,
                    content: label.name
                }
            });
        })
    ),

    // body content
    elem('body')(
        content()(function() {
            var text = this._issue.body;

            return util.mdToHtml(text);
        })
    ),

    // button 'answer'
    elem('line').elemMod('level', 'bottom')(
        content()(function() {
            var comments = this._issue.comments;

            if(!req.cookies['forum_username'] && comments === 0) {
                return '';
            }

            return [
                {
                    block : 'button',
                    text : comments === 0 ? 'Ответить' : 'Ответов: ' + comments,
                    mods : { theme : 'normal', size : 'm', togglable : 'check' },
                    mix: { block: this.block, elem: 'comments-switcher' }
                },
                {
                    block: 'spin',
                    mods: { theme: 'normal', size: 'm' },
                    mix: { block: 'issue', elem: 'spin' }
                }
            ];
        })
    )
);
